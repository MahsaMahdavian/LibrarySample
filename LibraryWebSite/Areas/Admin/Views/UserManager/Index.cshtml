@model ReflectionIT.Mvc.Paging.PagingList<LibraryWebSite.ViewModel.Identity.UsersViewModel>
@using ReflectionIT.Mvc.Paging
@addTagHelper*,ReflectionIT.Mvc.Paging
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@if (ViewBag.Alert != null)
{
    <div class="alert alert-success alert-dismissable">
        @ViewBag.Alert
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header bg-light text-right">
                کاربران سایت
            </div>
            <div class="card-body">
                <p>
                    <a href="~/Login/Register" class="btn btn-primary">افزودن کاربر جدید</a>
                </p>
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th class="text-center">
                                    انتخاب
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.Image)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.FirstName)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.LastName)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.UserName)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.PhoneNumber)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.Email)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.Roles)
                                </th>
                                <th class="text-center">
                                    @Html.SortableHeaderFor(model => model.IsActive)
                                </th>
                                <th class="text-center">

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-center">
                                        <div class="custom-control custom-checkbox d-inline-block">
                                            <input type="checkbox" class="custom-control-input child" value="@item.Email" name="emails" id="@item.Id" />
                                            <label class="custom-control-label" for="@item.Id"></label>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        @if (item.Image != null)
                                        {

                                        }

                                        else
                                        {
                                            <img src="~/images/UserPic.png" height="40" />
                                        }
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.FirstName)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.LastName)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td class="text-center">
                                        @foreach (var role in item.RolesName)
                                        {
                                            <span class="badge badge-primary">
                                                @role
                                            </span>
                                        }

                                    </td>
                                    <td class="text-center">
                                        <span class="badge @(item.IsActive==true?"badge-success":"badge-danger")">
                                            @(item.IsActive == true ? "فعال" : "غیرفعال")
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-primary btn-icon">
                                            <i class="fa fa-user"></i> | مدیریت کاربر
                                        </a>

                                        @if ((await AuthorizationService.AuthorizeAsync(User, "AdminView")).Succeeded)
                                        {

                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success btn-icon">
                                                <i class="fa fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-icon">
                                                <i class="fa fa-trash"></i>
                                            </a>
                                        }



                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <nav>
                        @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>